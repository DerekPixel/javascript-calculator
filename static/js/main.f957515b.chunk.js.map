{"version":3,"sources":["components/Buttons.jsx","components/Display.jsx","components/Results.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Buttons","handleNumber","handleOperations","handleEvalulation","handleClear","id","value","onClick","Display","input","Results","results","App","useState","currentValue","setCurrentValue","prevValue","setPrevValue","operation","setOperation","setInput","setResults","evaluated","setEvaluated","pressedEqualsButton","secondNum","operationToSet","firstNum","parseFloat","Math","abs","isNaN","sum","console","log","diff","quotient","product","className","event","test","target","undefined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f957515b.chunk.js","sourcesContent":["\r\nconst Buttons = ({handleNumber, handleOperations, handleEvalulation, handleClear}) => {\r\n\r\n  const buttonProps = [\r\n    {\r\n      content: 'AC',\r\n      id: 'clear'\r\n    },\r\n    {\r\n      content: '/',\r\n      id: 'divide'\r\n    },\r\n    {\r\n      content: 'X',\r\n      id: 'multiply'\r\n    },\r\n    {\r\n      content: 7,\r\n      id: 'seven'\r\n    },\r\n    {\r\n      content: 8,\r\n      id: 'eight'\r\n    },\r\n    {\r\n      content: 9,\r\n      id: 'nine'\r\n    },\r\n    {\r\n      content: '-',\r\n      id: 'subtract'\r\n    },\r\n    {\r\n      content: 4,\r\n      id: 'four'\r\n    },\r\n    {\r\n      content: 5,\r\n      id: 'five'\r\n    },\r\n    {\r\n      content: 6,\r\n      id: 'six'\r\n    },\r\n    {\r\n      content: '+',\r\n      id: 'add'\r\n    },\r\n    {\r\n      content: 1,\r\n      id: 'one'\r\n    },\r\n    {\r\n      content: 2,\r\n      id: 'two'\r\n    },\r\n    {\r\n      content: 3,\r\n      id: 'three'\r\n    },\r\n    {\r\n      content: '=',\r\n      id: 'equals'\r\n    },\r\n    {\r\n      content: 0,\r\n      id: 'zero'\r\n    },\r\n    {\r\n      content: '.',\r\n      id: 'decimal'\r\n    },\r\n  ]\r\n\r\n  // const elements = buttonProps.map((propObj) => {\r\n  //   return (\r\n  //     <button\r\n  //     key={propObj.id}\r\n  //     id={propObj.id}\r\n  //     value={propObj.content}\r\n  //     onClick={onClick}\r\n  //     >\r\n  //       {propObj.content}\r\n  //     </button>\r\n  //   )\r\n  // })\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        id='one'\r\n        value={1}\r\n        onClick={handleNumber}\r\n      >\r\n        1\r\n      </button>\r\n      <button\r\n        id='two'\r\n        value={2}\r\n        onClick={handleNumber}\r\n      >\r\n        2\r\n      </button>\r\n      <button\r\n        id='three'\r\n        value={3}\r\n        onClick={handleNumber}\r\n      >\r\n        3\r\n      </button>\r\n      <button\r\n        id='four'\r\n        value={4}\r\n        onClick={handleNumber}\r\n      >\r\n        4\r\n      </button>\r\n      <button\r\n        id='five'\r\n        value={5}\r\n        onClick={handleNumber}\r\n      >\r\n        5\r\n      </button>\r\n      <button\r\n        id='six'\r\n        value={6}\r\n        onClick={handleNumber}\r\n      >\r\n        6\r\n      </button>\r\n      <button\r\n        id='seven'\r\n        value={7}\r\n        onClick={handleNumber}\r\n      >\r\n        7\r\n      </button>\r\n      <button\r\n        id='eight'\r\n        value={8}\r\n        onClick={handleNumber}\r\n      >\r\n        8\r\n      </button>\r\n      <button\r\n        id='nine'\r\n        value={9}\r\n        onClick={handleNumber}\r\n      >\r\n        9\r\n      </button>\r\n      <button\r\n        id='zero'\r\n        value={0}\r\n        onClick={handleNumber}\r\n      >\r\n        0\r\n      </button>\r\n      <button\r\n        id='decimal'\r\n        value='.'\r\n        onClick={handleNumber}\r\n      >\r\n        .\r\n      </button>\r\n      <button\r\n        id='add'\r\n        value='+'\r\n        onClick={handleOperations}\r\n      >\r\n        +\r\n      </button>\r\n      <button\r\n        id='subtract'\r\n        value='-'\r\n        onClick={handleOperations}\r\n      >\r\n        -\r\n      </button>\r\n      <button\r\n        id='multiply'\r\n        value='*'\r\n        onClick={handleOperations}\r\n      >\r\n        *\r\n      </button>\r\n      <button\r\n        id='divide'\r\n        value='/'\r\n        onClick={handleOperations}\r\n      >\r\n        /\r\n      </button>\r\n      <button\r\n        id='equals'\r\n        value='='\r\n        onClick={handleEvalulation}\r\n      >\r\n        =\r\n      </button>\r\n      <button\r\n        id='clear'\r\n        onClick={handleClear}\r\n      >\r\n        AC\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Buttons\r\n","\r\nconst Display = ({input}) => {\r\n  return (\r\n    <div\r\n      id='display'\r\n    >\r\n      {/* <div className=\"input\"> */}\r\n        {input}\r\n      {/* </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Display\r\n","\r\nconst Results = ({results}) => {\r\n  return (\r\n    <div>\r\n      Results:{results}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Results\r\n","import React, { useState } from 'react'\n\nimport './App.css';\nimport Buttons from './components/Buttons';\nimport Display from './components/Display';\nimport Results from './components/Results';\n\n//3 + 5 * 6 - 2 / 4 = 32.5 or 11.5\n\nfunction App() {\n\n  const [currentValue, setCurrentValue] = useState('')\n  const [prevValue, setPrevValue] = useState('')\n\n  const [operation, setOperation] = useState('');\n  const [input, setInput] = useState('');\n  const [results, setResults] = useState('0');\n  const [evaluated, setEvaluated] = useState(false);\n\n  const handleOperations = (event) => {\n\n    if(event !== undefined) {\n\n      if(/(\\d+)\\.?(\\d+)?[+\\*/-]+(\\d+)\\.?(\\d+)?/g.test(input)) {\n\n        handleEvalulation(false, event.target.value);\n\n      }else {\n        if(/[-]/g.test(event.target.value)) {\n          if(/[+\\*/]/g.test(operation)) {\n            setEvaluated(false);\n            setInput(input + event.target.value);\n            setPrevValue(input + event.target.value);\n            setCurrentValue('-');\n            // setOperation(event.target.value);\n          } else {\n            setEvaluated(false);\n            setInput(input + event.target.value);\n            setPrevValue(input + event.target.value);\n            setCurrentValue('');\n            setOperation(event.target.value);\n          }\n        } else{\n          setEvaluated(false);\n          setInput(input + event.target.value);\n          setPrevValue(input + event.target.value);\n          setCurrentValue('');\n          setOperation(event.target.value);\n        }\n      }\n    }\n  }\n\n  const handleEvalulation = (pressedEqualsButton, operationToSet = '') => {\n\n    var firstNum = parseFloat(prevValue);\n    var secondNum;\n\n    if(operation === '-') {\n      secondNum = Math.abs(parseFloat(currentValue));\n    } else {\n      secondNum = parseFloat(currentValue);\n    }\n    \n    if(!isNaN(secondNum) && !isNaN(firstNum)) {\n      switch(operation) {\n        case '+':\n          var sum = firstNum + secondNum;\n          console.log(sum);\n          setResults(sum);\n          setInput(`${sum}${operationToSet}`);\n          setPrevValue(`${sum}`);\n          setCurrentValue('');\n          setOperation(operationToSet);\n          break;\n        case '-':\n          var diff = firstNum - secondNum;\n          setResults(diff);\n          setInput(`${diff}${operationToSet}`);\n          setPrevValue(`${diff}`);\n          setCurrentValue('');\n          setOperation(operationToSet);\n          break;\n        case '/':\n          var quotient = firstNum / secondNum;\n          setResults(quotient);\n          setInput(`${quotient}${operationToSet}`);\n          setPrevValue(`${quotient}`);\n          setCurrentValue('');\n          setOperation(operationToSet);\n          break;\n        case '*':\n          var product = firstNum * secondNum;\n          setResults(product);\n          setInput(`${product}${operationToSet}`);\n          setPrevValue(`${product}`);\n          setCurrentValue('');\n          setOperation(operationToSet);\n          break;\n      }\n    }\n\n    if(pressedEqualsButton) {\n      setEvaluated(true);\n    }\n  }\n\n  const handleNumber = (event) => {\n\n    if(/^(0)+/g.test(event.target.value)) {\n      if(/^(0)+/g.test(currentValue)) {\n        return\n      } else {\n        if(evaluated) {\n          setEvaluated(false);\n    \n          setInput(event.target.value)\n          setCurrentValue(event.target.value);\n    \n        } else {\n          if(input === '0') {\n            setInput(currentValue + event.target.value);\n          } else {\n            setInput(input + event.target.value);\n          }\n          setCurrentValue(currentValue + event.target.value);\n        }\n      }\n    }\n\n    if(/(\\.)/g.test(event.target.value)) {\n      if(/(\\.)/g.test(currentValue)) {\n        return\n      } else {\n        if(evaluated) {\n          setEvaluated(false);\n    \n          setInput(event.target.value)\n          setCurrentValue(event.target.value);\n    \n        } else {\n          if(input === '0') {\n            setInput(currentValue + event.target.value);\n          } else {\n            setInput(input + event.target.value);\n          }\n          setCurrentValue(currentValue + event.target.value);\n        }\n      }\n    }\n    if(evaluated) {\n      setEvaluated(false);\n\n      setInput(event.target.value)\n      setCurrentValue(event.target.value);\n\n    } else {\n      if(input === '0') {\n        setInput(currentValue + event.target.value);\n      } else {\n        setInput(input + event.target.value);\n      }\n      setCurrentValue(currentValue + event.target.value);\n    }\n  }\n\n  const handleClear = () => {\n    setPrevValue('');\n    setCurrentValue('');\n    setOperation('');\n    setInput('0');\n    setResults('0');\n  }\n\n  return (\n    <div className=\"App\">\n      <Results results={results} />\n      <Display input={input} />\n      <Buttons \n        handleNumber={event => handleNumber(event)} \n        handleOperations={event => handleOperations(event)}\n        handleEvalulation={() => handleEvalulation(true)}\n        handleClear={() => handleClear()}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}